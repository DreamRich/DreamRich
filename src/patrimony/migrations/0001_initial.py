# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-10-30 22:30
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Active',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('value', models.FloatField(default=0)),
                ('rate', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ActiveType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Arrearage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('value', models.FloatField(default=0)),
                ('period', models.PositiveIntegerField(default=0)),
                ('rate', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0, 'A taxa de juros não pode ser menor que 0%'), django.core.validators.MaxValueValidator(100, 'A taxa de juros não pode ser maior que 100%')])),
                ('amortization_system', models.CharField(choices=[('SAC', 'SAC'), ('PRICE', 'PRICE')], default='SAC', max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='ArrearageCalculator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='CompanyParticipation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('value', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('value', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Income',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=100)),
                ('value_monthly', models.FloatField(default=0)),
                ('thirteenth', models.BooleanField()),
                ('vacation', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='LifeInsurance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('value', models.FloatField(default=0)),
                ('redeemable', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Patrimony',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fgts', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='RealEstate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('value', models.FloatField(default=0)),
                ('salable', models.BooleanField()),
                ('patrimony', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patrimony.Patrimony')),
            ],
        ),
        migrations.AddField(
            model_name='lifeinsurance',
            name='patrimony',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patrimony.Patrimony'),
        ),
        migrations.AddField(
            model_name='income',
            name='patrimony',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patrimony.Patrimony'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='patrimony',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patrimony.Patrimony'),
        ),
        migrations.AddField(
            model_name='companyparticipation',
            name='patrimony',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patrimony.Patrimony'),
        ),
        migrations.AddField(
            model_name='arrearage',
            name='arrearage_calculator',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='calculate', to='patrimony.ArrearageCalculator'),
        ),
        migrations.AddField(
            model_name='arrearage',
            name='patrimony',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patrimony.Patrimony'),
        ),
        migrations.AddField(
            model_name='active',
            name='active_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patrimony.ActiveType'),
        ),
        migrations.AddField(
            model_name='active',
            name='patrimony',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patrimony.Patrimony'),
        ),
    ]
